//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProyectoFinalAPI.ModeloDB
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PruebaPracEntities : DbContext
    {
        public PruebaPracEntities()
            : base("name=PruebaPracEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Articulos> Articulos { get; set; }
        public virtual DbSet<Factura> Factura { get; set; }
        public virtual DbSet<Usuario> Usuario { get; set; }
    
        public virtual int AgregarArticulo(string codigo, string nombre, Nullable<decimal> precio, Nullable<bool> aplicaIVA)
        {
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("Precio", precio) :
                new ObjectParameter("Precio", typeof(decimal));
    
            var aplicaIVAParameter = aplicaIVA.HasValue ?
                new ObjectParameter("AplicaIVA", aplicaIVA) :
                new ObjectParameter("AplicaIVA", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgregarArticulo", codigoParameter, nombreParameter, precioParameter, aplicaIVAParameter);
        }
    
        public virtual int SP_AgregarProductoAFactura(string codigo, Nullable<int> cantidad, ObjectParameter totalTodo)
        {
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_AgregarProductoAFactura", codigoParameter, cantidadParameter, totalTodo);
        }
    }
}
